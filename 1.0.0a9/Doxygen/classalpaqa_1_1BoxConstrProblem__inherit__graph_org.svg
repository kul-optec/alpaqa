<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.43.0 (0)
 -->
<!-- Title: BoxConstrProblem&lt; Conf &gt; Pages: 1 -->
<svg width="338pt" height="864pt"
 viewBox="0.00 0.00 338.00 864.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 860)">
<title>BoxConstrProblem&lt; Conf &gt;</title>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title="Implements common problem functions for minimization problems with box constraints.">
<polygon fill="#999999" stroke="#666666" points="94.5,-457.5 94.5,-855.5 246.5,-855.5 246.5,-457.5 94.5,-457.5"/>
<text text-anchor="middle" x="170.5" y="-843.5" font-family="Helvetica,sans-Serif" font-size="10.00">BoxConstrProblem&lt; Conf &gt;</text>
<polyline fill="none" stroke="#666666" points="94.5,-836.5 246.5,-836.5 "/>
<text text-anchor="start" x="102.5" y="-824.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ n</text>
<text text-anchor="start" x="102.5" y="-813.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ m</text>
<text text-anchor="start" x="102.5" y="-802.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ C</text>
<text text-anchor="start" x="102.5" y="-791.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ D</text>
<text text-anchor="start" x="102.5" y="-780.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ l1_reg</text>
<text text-anchor="start" x="102.5" y="-769.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ penalty_alm_split</text>
<polyline fill="none" stroke="#666666" points="94.5,-762.5 246.5,-762.5 "/>
<text text-anchor="start" x="102.5" y="-750.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ BoxConstrProblem()</text>
<text text-anchor="start" x="102.5" y="-739.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ BoxConstrProblem()</text>
<text text-anchor="start" x="102.5" y="-728.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ resize()</text>
<text text-anchor="start" x="102.5" y="-717.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ BoxConstrProblem()</text>
<text text-anchor="start" x="102.5" y="-706.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="102.5" y="-695.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ BoxConstrProblem()</text>
<text text-anchor="start" x="102.5" y="-684.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="102.5" y="-673.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ get_n()</text>
<text text-anchor="start" x="102.5" y="-662.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ get_m()</text>
<text text-anchor="start" x="102.5" y="-651.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ eval_prox_grad_step()</text>
<text text-anchor="start" x="102.5" y="-640.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ eval_proj_diff_g()</text>
<text text-anchor="start" x="102.5" y="-629.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ eval_proj_multipliers()</text>
<text text-anchor="start" x="102.5" y="-618.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ get_box_C()</text>
<text text-anchor="start" x="102.5" y="-607.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ get_box_D()</text>
<text text-anchor="start" x="102.5" y="-596.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ eval_inactive_indices</text>
<text text-anchor="start" x="102.5" y="-585.5" font-family="Helvetica,sans-Serif" font-size="10.00">_res_lna()</text>
<text text-anchor="start" x="102.5" y="-574.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ check()</text>
<text text-anchor="start" x="102.5" y="-563.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ eval_proj_grad_step</text>
<text text-anchor="start" x="102.5" y="-552.5" font-family="Helvetica,sans-Serif" font-size="10.00">_box()</text>
<text text-anchor="start" x="102.5" y="-541.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ eval_prox_grad_step</text>
<text text-anchor="start" x="102.5" y="-530.5" font-family="Helvetica,sans-Serif" font-size="10.00">_box_l1_impl()</text>
<text text-anchor="start" x="102.5" y="-519.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ eval_prox_grad_step</text>
<text text-anchor="start" x="102.5" y="-508.5" font-family="Helvetica,sans-Serif" font-size="10.00">_box_l1()</text>
<text text-anchor="start" x="102.5" y="-497.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ eval_prox_grad_step</text>
<text text-anchor="start" x="102.5" y="-486.5" font-family="Helvetica,sans-Serif" font-size="10.00">_box_l1_scal()</text>
<text text-anchor="start" x="102.5" y="-475.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ eval_proj_multipliers</text>
<text text-anchor="start" x="102.5" y="-464.5" font-family="Helvetica,sans-Serif" font-size="10.00">_box()</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="classalpaqa_1_1CasADiProblem.html" target="_top" xlink:title="Problem definition for a CasADi problem, loaded from a DLL.">
<polygon fill="white" stroke="#666666" points="0,-0.5 0,-420.5 167,-420.5 167,-0.5 0,-0.5"/>
<text text-anchor="middle" x="83.5" y="-408.5" font-family="Helvetica,sans-Serif" font-size="10.00">CasADiProblem&lt; Conf &gt;</text>
<polyline fill="none" stroke="#666666" points="0,-401.5 167,-401.5 "/>
<text text-anchor="start" x="8" y="-389.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ param</text>
<text text-anchor="start" x="8" y="-378.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; impl</text>
<polyline fill="none" stroke="#666666" points="0,-371.5 167,-371.5 "/>
<text text-anchor="start" x="8" y="-359.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CasADiProblem()</text>
<text text-anchor="start" x="8" y="-348.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~CasADiProblem()</text>
<text text-anchor="start" x="8" y="-337.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CasADiProblem()</text>
<text text-anchor="start" x="8" y="-326.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="8" y="-315.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CasADiProblem()</text>
<text text-anchor="start" x="8" y="-304.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="8" y="-293.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ load_numerical_data()</text>
<text text-anchor="start" x="8" y="-282.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ eval_f()</text>
<text text-anchor="start" x="8" y="-271.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ eval_grad_f()</text>
<text text-anchor="start" x="8" y="-260.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ eval_f_grad_f()</text>
<text text-anchor="start" x="8" y="-249.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ eval_g()</text>
<text text-anchor="start" x="8" y="-238.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ eval_grad_g_prod()</text>
<text text-anchor="start" x="8" y="-227.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ eval_grad_ψ()</text>
<text text-anchor="start" x="8" y="-216.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ eval_ψ_grad_ψ()</text>
<text text-anchor="start" x="8" y="-205.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ eval_grad_L()</text>
<text text-anchor="start" x="8" y="-194.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ eval_ψ()</text>
<text text-anchor="start" x="8" y="-183.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ eval_grad_gi()</text>
<text text-anchor="start" x="8" y="-172.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ get_jac_g_num_nonzeros()</text>
<text text-anchor="start" x="8" y="-161.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ eval_jac_g()</text>
<text text-anchor="start" x="8" y="-150.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ eval_hess_L_prod()</text>
<text text-anchor="start" x="8" y="-139.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ get_hess_L_num_nonzeros()</text>
<text text-anchor="start" x="8" y="-128.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ eval_hess_L()</text>
<text text-anchor="start" x="8" y="-117.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ eval_hess_ψ_prod()</text>
<text text-anchor="start" x="8" y="-106.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ get_hess_ψ_num_nonzeros()</text>
<text text-anchor="start" x="8" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ eval_hess_ψ()</text>
<text text-anchor="start" x="8" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ provides_eval_grad_gi()</text>
<text text-anchor="start" x="8" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ provides_eval_jac_g()</text>
<text text-anchor="start" x="8" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ provides_eval_hess</text>
<text text-anchor="start" x="8" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00">_L_prod()</text>
<text text-anchor="start" x="8" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ provides_eval_hess_L()</text>
<text text-anchor="start" x="8" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ provides_eval_hess</text>
<text text-anchor="start" x="8" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00">_ψ_prod()</text>
<text text-anchor="start" x="8" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ provides_eval_hess_ψ()</text>
</a>
</g>
</g>
<!-- Node1&#45;&gt;Node2 -->
<g id="edge1" class="edge">
<title>Node1&#45;&gt;Node2</title>
<path fill="none" stroke="#63b8ff" d="M129.69,-447.23C127.96,-438.39 126.22,-429.51 124.49,-420.67"/>
<polygon fill="none" stroke="#63b8ff" points="126.29,-448.06 131.64,-457.2 133.16,-446.71 126.29,-448.06"/>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="classalpaqa_1_1FunctionalProblem.html" target="_top" xlink:title="Problem class that allows specifying the basic functions as C++ std::functions.">
<polygon fill="white" stroke="#666666" points="185,-11.5 185,-409.5 330,-409.5 330,-11.5 185,-11.5"/>
<text text-anchor="start" x="193" y="-397.5" font-family="Helvetica,sans-Serif" font-size="10.00">FunctionalProblem&lt;</text>
<text text-anchor="middle" x="257.5" y="-386.5" font-family="Helvetica,sans-Serif" font-size="10.00"> Conf &gt;</text>
<polyline fill="none" stroke="#666666" points="185,-379.5 330,-379.5 "/>
<text text-anchor="start" x="193" y="-367.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ f</text>
<text text-anchor="start" x="193" y="-356.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ grad_f</text>
<text text-anchor="start" x="193" y="-345.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ g</text>
<text text-anchor="start" x="193" y="-334.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ grad_g_prod</text>
<text text-anchor="start" x="193" y="-323.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ grad_gi</text>
<text text-anchor="start" x="193" y="-312.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ jac_g</text>
<text text-anchor="start" x="193" y="-301.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ hess_L_prod</text>
<text text-anchor="start" x="193" y="-290.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ hess_L</text>
<text text-anchor="start" x="193" y="-279.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ hess_ψ_prod</text>
<text text-anchor="start" x="193" y="-268.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ hess_ψ</text>
<polyline fill="none" stroke="#666666" points="185,-261.5 330,-261.5 "/>
<text text-anchor="start" x="193" y="-249.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ eval_f()</text>
<text text-anchor="start" x="193" y="-238.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ eval_grad_f()</text>
<text text-anchor="start" x="193" y="-227.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ eval_g()</text>
<text text-anchor="start" x="193" y="-216.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ eval_grad_g_prod()</text>
<text text-anchor="start" x="193" y="-205.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ eval_grad_gi()</text>
<text text-anchor="start" x="193" y="-194.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ eval_hess_L_prod()</text>
<text text-anchor="start" x="193" y="-183.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ eval_hess_ψ_prod()</text>
<text text-anchor="start" x="193" y="-172.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ eval_jac_g()</text>
<text text-anchor="start" x="193" y="-161.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ eval_hess_L()</text>
<text text-anchor="start" x="193" y="-150.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ eval_hess_ψ()</text>
<text text-anchor="start" x="193" y="-139.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ provides_eval_grad_gi()</text>
<text text-anchor="start" x="193" y="-128.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ provides_eval_jac_g()</text>
<text text-anchor="start" x="193" y="-117.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ provides_eval_hess</text>
<text text-anchor="start" x="193" y="-106.5" font-family="Helvetica,sans-Serif" font-size="10.00">_L_prod()</text>
<text text-anchor="start" x="193" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ provides_eval_hess_L()</text>
<text text-anchor="start" x="193" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ provides_eval_hess</text>
<text text-anchor="start" x="193" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10.00">_ψ_prod()</text>
<text text-anchor="start" x="193" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ provides_eval_hess_ψ()</text>
<text text-anchor="start" x="193" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FunctionalProblem()</text>
<text text-anchor="start" x="193" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="193" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FunctionalProblem()</text>
<text text-anchor="start" x="193" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
</a>
</g>
</g>
<!-- Node1&#45;&gt;Node3 -->
<g id="edge2" class="edge">
<title>Node1&#45;&gt;Node3</title>
<path fill="none" stroke="#63b8ff" d="M211.32,-447.16C213.78,-434.63 216.25,-422.04 218.69,-409.55"/>
<polygon fill="none" stroke="#63b8ff" points="207.84,-446.71 209.36,-457.2 214.71,-448.06 207.84,-446.71"/>
</g>
</g>
</svg>
